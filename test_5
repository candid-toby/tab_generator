<!DOCTYPE html>
<html>
<head>
<title>Random Guitar Tabs</title>
</head>
<body>

<h1>Random Guitar Tabs</h1>

<select id="tuning">
  <option value="e_standard">E Standard</option>
  <!-- <option value="dadgad">Dadgad</option>
  <option value="drop c">Drop C</option>
  <option value="drop d">Drop D</option> -->
</select>

<select id="key">
  <option value="e">E major</option>
 <!-- <option value="Dm">Dm</option>
  <option value="Em">Em</option>
  <option value="F">F</option>
  <option value="G">G</option>
  <option value="Am">Am</option>
  <option value="Bm">Bm</option> -->
</select>

<!-- <input type="number" id="numberOfMeasures" min="1" max="16" value="4"> -->

<input type="button" value="Generate" onclick="guitarTabGenerator()">

<div id="tabs"></div>

<script>
function guitarTabGenerator(tuning, key, numberOfMeasures) {
  // Create an array of notes for the specified tuning.
  const notes = {
    "standard": [
      "E",
      "A",
      "D",
      "G",
      "B",
      "E",
    ],
    "dadgad": [
      "D",
      "A",
      "D",
      "G",
      "A",
      "D",
    ],
    "drop c": [
      "C",
      "G",
      "C",
      "F",
      "A",
      "D",
    ],
    "drop d": [
      D,
      A,
      D,
      G,
      B,
      E,
    ],
  };

  // Create an array of chords for the specified key.
  const chords = [
    "C",
    "Dm",
    "Em",
    "F",
    "G",
    "Am",
    "Bm",
  ];

  // Create an array of measures.
  const measures = [];

  for (let i = 0; i < numberOfMeasures; i++) {
    // Create a new measure.
    const measure = [];

    // Add a chord to the measure.
    measure.push(chords[Math.floor(Math.random() * chords.length)]);

    // Add a rest to the measure.
    measure.push("R");

    // Add the measure to the array of measures.
    measures.push(measure);
  }

  // Convert the array of measures to guitar tabs.
  const tabs = measures.map((measure) => {
    return measure.map((note) => {
      if (note === "R") {
        return "R";
      } else {
        return `${notes[tuning].indexOf(note) + 1}`;
      }
    }).join(" ");
  });

  // Return the guitar tabs.
  return tabs;
}

// Get the user input.
const tuning = document.getElementById("tuning").value;
const key = document.getElementById("key").value;
const numberOfMeasures = document.getElementById("numberOfMeasures").value;

// Generate the guitar tabs.
const tabs = guitarTabGenerator(tuning, key, numberOfMeasures);

// Display the guitar tabs.
document.getElementById("tabs").innerHTML = tabs;
</script>

</body>
</html>
